@startuml CD_InGameObjects

package "Class diagram for In-Game Objects" #E1DFEB {
    
    'world elements'

    class Map {
        + tick()
    }

    class Tekton {
        + breakChance : int
        + sporeCount : int
        + break()
        + growMycelium(neighbour : Tile)
        + increaseChance(amount : int)
    }

    class Tile {
        + growthRate : int
        + maxMycelium : int
        + parentTekton : Tekton
        + getParentTekton()
        + addEntity(e : GameEntity)
        + removeEntity(e : GameEntity)
    }

    class MonoTile {
        + isTaken : boolean
        + override addEntity(e : GameEntity)
    }

    class AcidTile {
        damageRate : int
        + override addEntity(e : GameEntity)
        + damage()
    }
    'interactive elements'

    abstract class GameEntity {
        + id : int
        + currentTile : Tile
        + getCurrentTile()
    }

    class Mycelium {
        + health : int
        + isDying : boolean
        + connect()
        + detach()
    }

    class Spore {
        + nutrientValue : int
        + lifetime : int
        + effectTime : int
        + effectValue : int
        + void getEaten(i : Insect)
    }

    class SlowSpore {
        + override getEaten(i : Insect)
    }

    class SpeedUpSpore {
        + override getEaten(i : Insect)
    }

    class FreezeSpore {
        + override getEaten(i : Insect)
    }

    class CutSpore {
        + override getEaten(i : Insect)
    }

    'playable elements'

    abstract class Player {
        + score : int
        + actionPoints : int
        + pickStartingTile(t : Tile)
        + calculatePoints()
        + updateScore(score : int)
    }


    class FungusPlayer {
        + List<Mycelium> mycelia
        + placeMycelium(t : Tile)
        + growBody(t : Tile)
        + sporeCloud(target : FungusBody, size : int)
    }

    abstract class Fungus {
        health : int
        + growMycelium(neighbour : Tile)
        + growBody(neighbour : Tile)
        + void die()
    }

    class FungusBody {
        sporeCharge : int
        + sporeCloud(size : int)
    }
    
    class InsectPlayer {
        + moveTo(t : Tile)
        + eat() : boolean
        + cut() : boolean
    }

    class Insect {
        + speed : int
        + canCut : bool
        + eat(target : Spore)
        + step(target : Tile)
        + cut(target : Tile)
        + update()
        + setSpeedupEffect()
        + setCut()
    }

    'connections'

    Spore --|> GameEntity
    Fungus --|> GameEntity
    Insect --|> GameEntity
    Tile --|> GameEntity

    Mycelium --o FungusBody
    SlowSpore --|> Spore
    FreezeSpore --|> Spore
    SpeedUpSpore --|> Spore
    CutSpore --|> Spore
    Tekton --o "1" Map
    FungusBody "1" --* "1" Tekton
    Fungus --> Tekton
    Mycelium --> Tekton
    Tile "*" --* "1" Tekton
    MonoTile --|> Tile
    AcidTile --|> Tile
    
    Mycelium --|> Fungus
    FungusBody --|> Fungus
    GameEntity "*" --* "1" Tile
    Tile  --o  Tile
    Tekton --o Tekton
    FungusPlayer --|> Player
    Mycelium "*" --* "1" FungusPlayer
    InsectPlayer --|> Player
    Insect "1" --* "1" InsectPlayer
    FungusBody "*" --* "1" FungusPlayer
    Spore "1" --* "*" Insect

    
}

@enduml
